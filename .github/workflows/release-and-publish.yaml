name: Release NPM Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release type (patch, minor, major, or specific version)'
        required: true
        default: 'patch'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write  
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # - name: Run tests
      #   run: pnpm test

      # - name: Build
      #   run: pnpm run build

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump version and push
        id: version-bump
        run: |
          pnpm version ${{ github.event.inputs.version }} -m "chore: release v%s"
          # Get the new version after bumping
          VERSION=$(node -p "require('./package.json').version")
          
          # Set version output
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Push all changes and tags
          git push && git push --tags

      - name: Publish to NPM
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version-bump.outputs.version }}
          name: v${{ steps.version-bump.outputs.version }}
          generate_release_notes: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
